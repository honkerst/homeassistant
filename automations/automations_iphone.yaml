###############################################################
## Location update from iOS shortcut (arrive/leave home, join wifi)
###############################################################
- alias: iOS shortcuts webhook location update
  trigger:
    - platform: webhook
      webhook_id: ios_hook_timhLongHorse71redgecko
  action:
    - service: device_tracker.see
      data_template:
        dev_id: "{{ trigger.json.tracker_name }}"
        location_name: "{{ trigger.json.location_name }}"
        gps_accuracy: 80

###############################################################
####             Plex play notifications on iOS app         ### 
###############################################################
# Instead of detecting any state change, updated to add 7 versions of 
# the 'to' setting. This is required for the 'for' setting to work.
- alias: "Plex play notification"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "1"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 2"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "2"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 3"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "3"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 4"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "4"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 5"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "5"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 6"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "6"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
- alias: "Plex play notification 7"
  trigger:
    platform: state
    entity_id: sensor.plex_tim_s_imac
    # stop repeated notifications when viewers constantly pause their videos
    to: "7"
    for: "00:01:00"
  action:
#    service: notify.ios_timiphonex
    service: notify.pushover_timhiphonex
#    service: notify.mobile_app_timh_iphonex256
    data_template:
      message: >
        {% for attr in states.sensor.plex_tim_s_imac.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="icon" -%}
         {{attr}} is watching {{states.sensor.plex_tim_s_imac.attributes[attr]}}. 
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
###############################################################
####         iPhone notification with response              ###
###############################################################
- alias: When Fin gets home, inform Tim Phone
  initial_state: True
  trigger:
    platform: state
    entity_id: device_tracker.iphonedetect_fin_iphone6
    from: 'not_home'
    to: 'home'
  action:
    service: notify.mobile_app_timh_iphonex256
    data:
      message: "Fin has arrived home."
      data:
        actions:
          - identifier: 'WELCOME_HOME'
            title: 'Send "Welcome Home"'
            activationMode: 'background'
            authenticationRequired: true
            destructive: true
            behavior: 'default'
          - identifier: 'WELCOME_MESSAGE'
            title: 'Send Message'
            activationMode: 'background'
            authenticationRequired: true
            destructive: false
            behavior: 'textInput'
            textInputButtonTitle: 'Send'
            textInputPlaceholder: 'Message here'
        action_data: # Anything passed in action_data will get echoed back to Home Assistant.
          entity_id: light.test
          my_custom_data: foo_bar
# Tell Kitchen Echo to say Welcome Home
- alias: Welcome home
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: WELCOME_HOME
  action:
    - service: script.house_announce_downstairs
      data_template:
        notification_feed_name: Default
        tts_msg: "Welcome home Fin!"
# Type a response on phone for Kitchen Echo to read out
- alias: Welcome message
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: WELCOME_MESSAGE
  action:
    - service: script.house_announce_downstairs
      data_template:
        notification_feed_name: Default
        tts_msg: "{{ trigger.event.data['textInput'] }}"
###############################################################
####         response for iPhone 'goodnight' action         ###
###############################################################
- alias: "Activate Good Night scene from watch"
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: good_night_scene
  action:
    - service: script.lighting_scene_good_night
###############################################################
####         iPhone notification test              ###
###############################################################
- alias: Notifications test
  initial_state: True
  trigger:
    platform: state
    # when my bedroom fan turns on
    entity_id:  switch.tuya_smart_plug_02
    from: 'off'
    to: 'on'
  action:
    service: notify.mobile_app_timh_iphonex256
    data:
      title: "Check this out!"
      message: "Notifications test triggered."
      data:
        actions:
          - identifier: 'NOTIFICATION_TEST'
            title: 'Send "Notification test"'
            activationMode: 'background'
            authenticationRequired: true
            destructive: true
            behavior: 'default'
          - identifier: 'NOTIFICATION_ALTERNATIVE'
            title: 'Send "Notification alternative"'
            activationMode: 'background'
            authenticationRequired: true
            destructive: false
            behavior: 'textInput'
            textInputButtonTitle: 'Send'
            textInputPlaceholder: 'Message here'
        action_data: # Anything passed in action_data will get echoed back to Home Assistant.
          entity_id: light.test
          my_custom_data: foo_bar
# Tell Kitchen Echo to say Notification test
- alias: Notification test
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: NOTIFICATION_TEST
  action:
    - service: script.house_announce_downstairs
      data_template:
        notification_feed_name: Default
        tts_msg: "Notification test"
# Type a response on phone for Kitchen Echo to read out
- alias: Notification alternative
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: NOTIFICATION_ALTERNATIVE
  action:
    - service: script.house_announce_downstairs
      data_template:
        notification_feed_name: Default
        tts_msg: "{{ trigger.event.data['textInput'] }}"

########################################################
#####  Simulate internet outage ########
########################################################
simulate_internet_outage:
  alias: Simulate internet outage
  sequence:
    - service: homeassistant.turn_on
      entity_id: script.xiaomi_gateway_alarm_accident
    - service: homeassistant.turn_on
      entity_id: script.check_block_party_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_podcasts_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_jazz_radio_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_oz_radio_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio2_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio3_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio4_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_talksport_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_nomusic_status_outage_warning
########################################################
#####  Check music status before outage warning ########
########################################################
check_block_party_status_outage_warning:
  alias: Check Block Party status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.blockparty_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.blockparty_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.blockparty_gui
    - service: homeassistant.turn_on
      entity_id: switch.itunes_initial_play
    - service: homeassistant.turn_on
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_on
      entity_id: input_boolean.blockparty_gui
check_podcasts_status_outage_warning:
  alias: Check Podcasts status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.podcasts_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.podcasts_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.podcasts_gui
check_oz_radio_status_outage_warning:
  alias: Check Oz Radio status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.oz_radio_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.oz_radio_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.oz_radio_gui
check_jazz_radio_status_outage_warning:
  alias: Check Jazz Radio status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.jazz_radio_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.jazz_radio_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.jazz_radio_gui
check_radio2_status_outage_warning:
  alias: Check Radio2 status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.radio2_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.radio2_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.radio2_gui
check_radio3_status_outage_warning:
  alias: Check Radio3 status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.radio3_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.radio3_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.radio3_gui
check_radio4_status_outage_warning:
  alias: Check Radio4 status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.radio4_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.radio4_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.radio4_gui
check_talksport_status_outage_warning:
  alias: Check TalkSport status then outage warning
  sequence:
    - condition: state
      entity_id: input_boolean.talksport_gui
      state: 'on'
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_off
      entity_id: input_boolean.talksport_gui
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - delay:
        seconds: 10
    - service: homeassistant.turn_on
      entity_id: input_boolean.talksport_gui
check_nomusic_status_outage_warning:
  alias: Check if no music playing then outage warning
  sequence:
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.itunes
          state: 'paused'
        - condition: state
          entity_id: media_player.itunes
          state: 'stopped'
        - condition: state
          entity_id: media_player.itunes
          state: 'idle'
    - service: homeassistant.turn_off
      entity_id: switch.itunes_shuffle_switch
    - service: homeassistant.turn_on
      entity_id: switch.internet_outage_detected
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
########################################################
########      Xiaomi gateway sounds             ########
########################################################
xiaomi_gateway_alarm:
  sequence:
    - service: homeassistant.turn_off
      entity_id: input_boolean.xiaomi_alarm_repeat
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 8
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
    - delay: 00:00:10
    - service: homeassistant.turn_on
      entity_id: input_boolean.xiaomi_alarm_repeat
xiaomi_gateway_alarm_police_car_1:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 0
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_police_car_2:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 1
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_accident:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 2
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_countdown:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 3
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_air_raid:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 7
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_alarm_clock:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 13
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_thinker:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 29
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
xiaomi_gateway_alarm_guitar:
  sequence:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 22
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
########################################################
########      Rainbow effects                   ########
########################################################
##### Living room floor
random_light_living_room_floor:
  alias: Random light living room floor
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_living_room_floor_loop
    - condition: state
      entity_id: input_boolean.random_light_living_room_floor
      state: 'on'
    - service: light.turn_on
      data:
        entity_id: light.gateway_light_04cf8c8fa2af
        brightness: 254
    - service: light.turn_on
      entity_id: light.gateway_light_04cf8c8fa2af
      data_template:
        hs_color:
          - "{{ (30 + (state_attr('light.gateway_light_04cf8c8fa2af', 'hs_color')[0] or 0)) % 360 }}"
          - 100
        brightness_pct: 100
        transition: 3
    - service: script.random_light_living_room_floor_loop
random_light_living_room_floor_loop:
  alias: Random light living room floor loop
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_living_room_floor
    - condition: state
      entity_id: input_boolean.random_light_living_room_floor
      state: 'on'
    - delay:
        seconds: 6
    - service: script.random_light_living_room_floor
##### Living room sofa
random_light_living_room_sofa:
  alias: Random light living room sofa
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_living_room_sofa_loop
    - condition: state
      entity_id: input_boolean.random_light_living_room_sofa
      state: 'on'
    - service: light.turn_on
      data:
        entity_id: light.living_room_sofa
        brightness: 254
    - service: light.turn_on
      entity_id: light.living_room_sofa
      data_template:
        hs_color:
          - "{{ (30 + (state_attr('light.living_room_sofa', 'hs_color')[0] or 0)) % 360 }}"
          - 100
        brightness_pct: 100
        transition: 3
    - service: script.random_light_living_room_sofa_loop
random_light_living_room_sofa_loop:
  alias: Random light living room sofa loop
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_living_room_sofa
    - condition: state
      entity_id: input_boolean.random_light_living_room_sofa
      state: 'on'
    - delay:
        seconds: 6
    - service: script.random_light_living_room_sofa
##### Reading light
random_light_reading_light:
  alias: Random light reading light
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_reading_light_loop
    - condition: state
      entity_id: input_boolean.random_light_reading_light
      state: 'on'
    - service: light.turn_on
      data:
        entity_id: light.reading_light
        brightness: 140
    - service: light.turn_on
      entity_id: light.reading_light
      data_template:
        hs_color:
          - "{{ (30 + (state_attr('light.reading_light', 'hs_color')[0] or 0)) % 360 }}"
          - 100
        brightness_pct: 50
        transition: 3
    - service: script.random_light_reading_light_loop
random_light_reading_light_loop:
  alias: Random light reading light loop
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_reading_light
    - condition: state
      entity_id: input_boolean.random_light_reading_light
      state: 'on'
    - delay:
        seconds: 6
    - service: script.random_light_reading_light
##### Dining room
random_light_dining_room:
  alias: Random light dining room
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_dining_room_loop
    - condition: state
      entity_id: input_boolean.random_light_dining_room
      state: 'on'
    - service: light.turn_on
      data:
        entity_id: light.dining_room
        brightness: 254
    - service: light.turn_on
      entity_id: light.dining_room
      data_template:
        hs_color:
          - "{{ (30 + (state_attr('light.dining_room', 'hs_color')[0] or 0)) % 360 }}"
          - 100
        brightness_pct: 100
        transition: 3
    - service: script.random_light_dining_room_loop
random_light_dining_room_loop:
  alias: Random light dining room loop
  sequence:
    - service: script.turn_off
      entity_id: script.random_light_dining_room
    - condition: state
      entity_id: input_boolean.random_light_dining_room
      state: 'on'
    - delay:
        seconds: 6
    - service: script.random_light_dining_room

############# Light delay tests
bedtime_lights_delayed:
  alias: Bed time Lights Delayed
  sequence:
  - service: light.turn_off
    data:
      entity_id: light.office
      transition: 5
  - delay:
      seconds: 3
  - service: light.turn_off
    data:
      entity_id: light.living_room
      transition: 5
  - delay:
      seconds: 2
  - service: light.turn_off
    data:
      entity_id: light.dining_room
      transition: 10
bedtime_lights_delayed_test_2:
  alias: Bed time Lights Delayed test 2
  sequence:
  - service: light.turn_off
    data:
      entity_id: light.office
      transition: 5

########################################################
########        Status report             ########
########################################################
tts_status_report:
  alias: Status report
  sequence:
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "You're up late ... ",
          "Its really late ... "
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          "Good morning."
          {% elif now().strftime("%H")|int < 18 %}
          "Good afternoon."
          {% else %}
          "Good evening."
          {% endif %}
    - delay: 00:00:02
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {% if is_state('sensor.window_kitchen', 'Open') and is_state('sensor.window_dining_room', 'Open')  %}
            "Heads up ... The Kitchen and Dining Room windows are both still open ... "
          {% elif is_state('sensor.window_kitchen', 'Open') %}
            "Heads up ... The Kitchen window has been left open ... "
          {% elif is_state('sensor.window_dining_room', 'Open') %}
            "Heads up ... The Dining Room window has been left open ... "
          {% endif %}
    - delay: 00:00:05
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {{ [
          "I have no other news ... " ,
          "I have nothing else to report ... " ,
          "That's it for me ... " ,
          "Nothing else to report ... " ,
          "Report ends ... " ,
          "End of report ... ",
          "That's all for now ... ",
          "That's all from me ... "
          ] |random }}
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "Good night ... ",
          "Have a good night ... ",
          "Sleep well ... "
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          {{ [
          "Hope you have a good day ... ",
          "Hope you have a good morning ... ",
          "Enjoy your day ... ",
          "Enjoy your morning ... ",
          "Have a good morning ... ",
          "Have a great day ... ",
          "Have a good day ... "
          ] |random }}
          {% elif now().strftime("%H")|int < 18 %}
          {{ [
          "Good afternoon ... ",
          "Good day ... "
          ] |random }}
          {% else %}
          {{ [
          "Good night ... ",
          "Have a good night ... ",
          "Enjoy your evening ... ",
          "Sleep well ... "
          ] |random }}
          {% endif %}
########################################################
########        Welcome home script             ########
########################################################
welcome_home_script:
  alias: Welcome home
  sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.kitchen_echo_show
        volume_level: 0.4
    - delay: 00:00:02
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {{ [
          "Welcome home Tim ... " ,
          "Tim is home ... " ,
          "Welcome home ... " ,
          "You're back ... " ,
          "Greetings Tim ... "
          ] |random }}
    - delay: 00:00:03
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "You're up late ... ",
          "Its really late ... "
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          {{ [
          "Have you had a good morning?",
          "How is everything this morning?",
          "How are you this morning?",
          "How has your morning been?"
          ] |random }}
          {% elif now().strftime("%H")|int < 18 %}
          {{ [
          "Have you had a good afternoon?",
          "How is everything this afternoon?",
          "How are you this afternoon?",
          "How has your afternoon been?"
          ] |random }}
          {% elif now().strftime("%H")|int < 19 %}
          {{ [
          "How was work?",
          "Was work okay?",
          "How has work been?",
          "How was work today?"
          ] |random }}
          {% else %}
          {{ [
          "Are you having a good evening?",
          "How is everything this evening?",
          "How are you this evening?",
          "Have you had a good evening?",
          "How has your evening been?",
          "Good evening."
          ] |random }}
          {% endif %}
    - delay: 00:00:05
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          The house temperature is {{states.sensor.hue_landing_temperature.state|round(1)}} degrees centigrade.
          The thermostat is set to {{state_attr('climate.lyric', 'temperature')|round(1)}} degrees.
          According to my GPS tracker you arrived home {{(as_timestamp(now()) - as_timestamp(states.device_tracker.timiphonex.last_updated))|round(0)}} seconds ago. 
    - delay: 00:00:11
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {% if is_state('sensor.window_kitchen', 'Open') and is_state('sensor.window_dining_room', 'Open')  %}
            "Heads up ... The Kitchen and Dining Room windows are both still open ... "
          {% elif is_state('sensor.window_kitchen', 'Open') %}
            "Heads up ... The Kitchen window has been left open ... "
          {% elif is_state('sensor.window_dining_room', 'Open') %}
            "Heads up ... The Dining Room window has been left open ... "
          {% endif %}
    - delay: 00:00:12
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {{ [
          "I have no other news." ,
          "I have nothing else to report." ,
          "That's it for me." ,
          "Nothing else to report." ,
          "Report ends." ,
          "End of report.",
          "That's all for now.",
          "That's all from me."
          ] |random }}
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "Good night.",
          "Have a good night.",
          "Sleep well."
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          {{ [
          "Hope you have a good day.",
          "Hope you have a good morning.",
          "Enjoy your day.",
          "Enjoy your morning.",
          "Have a good morning.",
          "Have a great day.",
          "Have a good day."
          ] |random }}
          {% elif now().strftime("%H")|int < 18 %}
          {{ [
          "Good afternoon.",
          "Good day."
          ] |random }}
          {% else %}
          {{ [
          "Good night.",
          "Have a good night.",
          "Enjoy your evening.",
          "Sleep well."
          ] |random }}
          {% endif %}
welcome_home_script_nodelays:
  alias: Welcome home (no delays)
  sequence:
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          {{ [
          "Welcome home Tim." ,
          "Tim is home." ,
          "Welcome home." ,
          "You're back." ,
          "Greetings Tim."
          ] |random }}
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "You're up late.",
          "Its really late."
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          {{ [
          "Have you had a good morning?.",
          "How is everything this morning?.",
          "How are you this morning?.",
          "How has your morning been?."
          ] |random }}
          {% elif now().strftime("%H")|int < 18 %}
          {{ [
          "Have you had a good afternoon?.",
          "How is everything this afternoon?.",
          "How are you this afternoon?.",
          "How has your afternoon been?."
          ] |random }}
          {% elif now().strftime("%H")|int < 19 %}
          {{ [
          "How was work?.",
          "Was work okay?.",
          "How has work been?.",
          "How was work today?."
          ] |random }}
          {% else %}
          {{ [
          "Are you having a good evening?.",
          "How is everything this evening?.",
          "How are you this evening?.",
          "Have you had a good evening?.",
          "How has your evening been?.",
          "Good evening.."
          ] |random }}
          {% endif %}
          The house temperature is {{states.sensor.hue_landing_temperature.state|round(1)}} degrees centigrade.
          The thermostat is set to {{state_attr('climate.lyric', 'temperature')|round(1)}} degrees.
          According to my GPS tracker you arrived home {{(as_timestamp(now()) - as_timestamp(states.device_tracker.timiphonex.last_updated))|round(0)}} seconds ago. 
          {% if is_state('sensor.window_kitchen', 'Open') and is_state('sensor.window_dining_room', 'Open')  %}
            {{ [
              "Note.",
              "Warning.",
              "Just to remind you.",
              "Remember.",
              "Don't forget.",
              "You should know."
            ] |random }}
            {{ [
              "The Kitchen and Dining Room windows are both still open.",
              "The Kitchen and Dining Room windows are both open.",
              "The Kitchen and Dining Room windows are all open.",
              "The Kitchen and Dining Room windows are open.",
              "The Kitchen and Dining Room windows haven't been closed."
            ] |random }}
          {% elif is_state('sensor.window_kitchen', 'Open') %}
            {{ [
              "Note.",
              "Warning.",
              "Just to remind you.",
              "Remember.",
              "Don't forget.",
              "You should know."
            ] |random }}
            {{ [
              "The Kitchen window has been left open.",
              "The Kitchen window is still open.",
              "The Kitchen window is open.",
              "The Kitchen window hasn't been closed."
            ] |random }}
          {% elif is_state('sensor.window_dining_room', 'Open') %}
            {{ [
              "Note.",
              "Warning.",
              "Just to remind you.",
              "Remember.",
              "Don't forget.",
              "You should know."
            ] |random }}
            {{ [
              "The Dining Room window has been left open.",
              "The Dining Room window is still open.",
              "The Dining Room window is open.",
              "The Dining Room window hasn't been closed."
            ] |random }}
          {% endif %}
          {{ [
          "I have no other news." ,
          "I have nothing else to report." ,
          "That's it for me." ,
          "Nothing else to report." ,
          "Report ends." ,
          "End of report.",
          "That's all for now.",
          "That's all from me."
          ] |random }}
          {% if now().strftime("%H")|int < 05 %}
          {{ [
          "Good night.",
          "Have a good night.",
          "Sleep well."
          ] |random }}
          {% elif now().strftime("%H")|int < 12 %}
          {{ [
          "Hope you have a good day.",
          "Hope you have a good morning.",
          "Enjoy your day.",
          "Enjoy your morning.",
          "Have a good morning.",
          "Have a great day.",
          "Have a good day."
          ] |random }}
          {% elif now().strftime("%H")|int < 18 %}
          {{ [
          "Good afternoon.",
          "Good day."
          ] |random }}
          {% else %}
          {{ [
          "Good night.",
          "Have a good night.",
          "Enjoy your evening.",
          "Sleep well."
          ] |random }}
          {% endif %}
########################################################
########        Plant health report             ########
########################################################
tts_plant_info:
  alias: Report Plant Info
  sequence:
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.kitchen_echo_show
        message: >
          '{{ [
          "OK. " ,
          "Alright. " ,
          "As you wish. " ,
          "Acknowledged. " ,
          "Affirmative. " ,
          "No problem. " ,
          " " ,
          ] |random }}'
          '{{ [
          "Here is your plant report. " ,
          "Here is your plant monitoring report. " ,
          "Here is your plant health report. " ,
          "Here is today's plant report. " ,
          "Here is today's plant health report. " ,
          "Here is today's plant monitoring report. " ,
          "Plant health updates for today. " ,
          "Plant health updates begin. " ,
          "Plant health report begins. " ,
          "Plant monitoring report begins. " ,
          "This is what the plants look like. " ,
          "This is what the plants look like today. " ,
          "This is the plant health situation. " ,
          "This is the plant health situation today. " ,
          "Todays plant report. " ,
          "Todays plant monitoring report. " ,
          "Plant health report for today.  " ,
          "Plant monitoring report for today.  " ,
          "Plant report for today.  "
          ] |random }}'
          Dragon Tree, {{ state_attr('plant.dracaena_marginata', 'problem') }}.
          Kentia Palm, {{ state_attr('plant.howea_forsteriana', 'problem') }}.
          '{{ [
          "End of report. " ,
          "That is all. " ,
          "Report complete. " ,
          "Report ends. " ,
          "Report concludes.  "
          ] |random }}'

############# Amazon Polly tests
tts_polly_test:
  alias: Polly test
  sequence:
  - service: media_player.volume_set
    data:
      entity_id: media_player.kitchen_echo_show
      volume_level: 0.4
  - delay: 00:00:02
  - service: tts.amazon_polly_say
    data_template:
      entity_id: media_player.living_room_echo
      message: >
        <speak>
            Hello from
            <break time=".9s" />
            Amazon Polly
        </speak>
tts_polly_test_new:
  alias: Polly test new
  sequence:
  - service: tts.amazon_polly_say
    data_template:
      message: >
        <speak>
            Another hello from
            <break time=".3s" />
            Amazon Polly
        </speak>
       
############# Alexa TTS tests   
test_kitchen_echo_show:
  alias: Test Kitchen Echo Show
  sequence:
  - service: media_player.alexa_tts
    data_template:
      entity_id: media_player.kitchen_echo_show
      message: -> 'Kitchen Echo Show.'
test_living_room_echo:
  alias: Test Living Room Echo
  sequence:
  - service: media_player.alexa_tts
    data_template:
      entity_id: media_player.living_room_echo
      message: -> 'Living Room Echo.'
test_landing_echo:
  alias: Test Landing Echo
  sequence:
  - service: media_player.alexa_tts
    data_template:
      entity_id: media_player.landing_echo
      message: -> 'Landing Echo.'
      
doorbell:
  alias: Doorbell
  sequence:
  - service: media_player.alexa_tts
    data_template:
      entity_id: media_player.kitchen_echo_show
      message: -> 'Someone is at the door.'

test_alexa:
  alias: Alexa - test  
  sequence:
    - service: media_player.play_media
      data:
        entity_id: media_player.living_room_echo
        media_content_id: Silence 5 Seconds
        media_content_type: PRIME_MUSIC
    - wait_template: "{{ states.media_player.living_room_echo.state == 'playing' }}"
      timeout: '00:00:07'
      continue_on_timeout: 'true'    
    - service: media_player.volume_set
      data:
        entity_id: media_player.living_room_echo
        volume_level: 0.4
    - delay:
        milliseconds: 500
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.living_room_echo
        message: "testing volume increase"

###########
#Announce status change script!!! (from the matching automation) !!!
###########
audio_notify:
  sequence: 
    - service: media_player.alexa_tts
      data_template:       
        entity_id: media_player.{{ mplayer }}         
        message: "{{ tts_msg }}"

########################################################
########      Scenes - delayed transitions      ########
########################################################
game_mode_delayed_office:
  alias: Game Mode Lights Delayed office
  sequence:
  - service: light.turn_on
    data:
      entity_id: light.office
      brightness: 133
      xy_color: [0.67,0.325]
      transition: 5
work_mode_delayed_office:
  alias: Work Mode Lights Delayed office
  sequence:
  - service: light.turn_on
    data:
      entity_id: light.office
      brightness: 173
      xy_color: [0.499,0.415]
      transition: 3


###############################################################
#   Notification if Hue has update available 
###############################################################
- alias: Create notifications for "service" errors
  trigger:
    platform: event
    event_type: system_log_event
  condition:
    condition: template
    value_template: '{{ "in the Philips Hue App" in trigger.event.data.message }}'
  action:
    - service: persistent_notification.create
      data_template:
        title: Hue firmware update available
        message: '{{ trigger.event.data.message }}'
    - service: notify.pushover_timhiphonex
      data:
        message: "Attention, a Hue firmware update is available."
    - service: script.house_announce_downstairs
      data_template:
        tts_msg: "Attention, a Hue firmware update is available."

###############################################################
#   Start Homekit after zwave ready
###############################################################
- alias: 'Start HomeKit after zwave ready'
  trigger:
    - platform: event
      event_type: zwave.network_ready
    - platform: event
      event_type: zwave.network_complete
    - platform: event
      event_type: zwave.network_complete_some_dead
  action:
    - service: homekit.start
###############################################################
#   Vacuum stuck - moved to alerts.yaml
###############################################################
#- alias: "Robovac needs help"
#  trigger:
#    - platform: state
#      entity_id: vacuum.robovac
#      from: 'cleaning'
#      to: 'error'
#  action:
#    - service: script.vacuum_timer_announce
###############################################################
#   All speakers at once
###############################################################
- alias: "Turn on all the speakers"
  trigger:
    - platform: state
      entity_id: input_boolean.all_the_speakers
      from: 'off'
      to: 'on'
  action:
    - service: media_player.turn_on
      data:
        entity_id: 
          - media_player.kitchen_speakers_airtunes_speaker
          - media_player.living_room_speakers_airtunes_speaker
          - media_player.office_speakers_airtunes_speaker
    - service: media_player.turn_off
      data:
        entity_id: media_player.computer_airtunes_speaker
- alias: "Turn off all the speakers"
  trigger:
    - platform: state
      entity_id: input_boolean.all_the_speakers
      from: 'on'
      to: 'off'
  action:
    - service: media_player.turn_on
      data:
        entity_id: media_player.computer_airtunes_speaker
    - service: media_player.turn_off
      data:
        entity_id: 
          - media_player.kitchen_speakers_airtunes_speaker
          - media_player.living_room_speakers_airtunes_speaker
          - media_player.office_speakers_airtunes_speaker
###############################################################
#   Upstairs / Downstairs message
###############################################################
####   This doesn't work very well. 
####   1. The motion sensor times don't seem to be identical. I can walk past sensor 1 
####   and then past sensor 2, and sensor 1's 'last detected' will sometimes be 1 or 2 
####   seconds AFTER sensor 2
####
####   2. When the landing sensor dims the landing light after 30 seconds 
####   that counts as a 'last detected' update?
- alias: Someone going upstairs
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.zone_3_landing
    to: 'on'
  condition: 
    condition: and
    conditions:
    # upper stairs triggered
      - condition: state
        entity_id: binary_sensor.landing_homekit_motion_sensor
        state: 'on'
    # dining room minus landing = negative is going up, positive going down 
#      - condition: template
#       value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_zone_1_dining_room.last_updated) - as_timestamp(states.sensor.motion_last_detected_zone_3_landing.last_updated) < 0)}}"
    # stairs minus landing = negative is going up, positive going down
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) - as_timestamp(states.sensor.motion_last_detected_landing.last_updated) < 0)}}"
    # gap between landing and stairs is 0-5 seconds
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_landing.last_updated) - as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) > 0)}}"
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_landing.last_updated) - as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) < 5)}}"
  action:
    - service: script.house_announce_downstairs
      data_template:
        tts_msg: "Going Up"
- alias: Someone going downstairs
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.stairs_homekit_motion_sensor
    to: 'on'
  condition: 
    condition: and
    conditions:
    # upper-landing triggered
      - condition: state
        entity_id: binary_sensor.landing_homekit_motion_sensor
        state: 'on'
    # stairs minus landing = negative is going up, positive going down
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) - as_timestamp(states.sensor.motion_last_detected_landing.last_updated) > 0)}}"
    # gap between upper stairs and lower stairs is 0-3 seconds
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) - as_timestamp(states.sensor.motion_last_detected_landing.last_updated) > 0)}}"
      - condition: template
        value_template: "{{ (as_timestamp(states.sensor.motion_last_detected_stairs.last_updated) - as_timestamp(states.sensor.motion_last_detected_landing.last_updated) < 3)}}"
  action:
    - service: script.house_announce_downstairs
      data_template:
        tts_msg: "Going Down"
###############################################################
####             Playstation mode                 ### 
###############################################################
- alias: 'Playstation on'
  trigger:
    - platform: state
      entity_id: input_boolean.playstation_mode
      from: 'off'
      to: 'on'
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.ps4
    - service: script.turn_on
      data:
        entity_id: script.harmony_play_ps4
- alias: 'Playstation off'
  trigger:
    - platform: state
      entity_id: input_boolean.playstation_mode
      from: 'on'
      to: 'off'
  action:
    - service: script.turn_on
      data:
        entity_id: script.harmony_power_off
###############################################################
####             Xbox mode                 ### 
###############################################################
- alias: 'Xbox on'
  trigger:
    - platform: state
      entity_id: input_boolean.xbox_mode
      from: 'off'
      to: 'on'
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.xbox_one
    - service: script.turn_on
      data:
        entity_id: script.harmony_play_xbox_one
- alias: 'Xbox off'
  trigger:
    - platform: state
      entity_id: input_boolean.xbox_mode
      from: 'on'
      to: 'off'
  action:
    - service: script.turn_on
      data:
        entity_id: script.harmony_power_off

###############################################################
####  Office motion sensor, only at night                   ### 
###############################################################
- alias: "Office motion sensor on when dark outside"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.office_motion_sensor_disable
  trigger:
    platform: sun
    # Possible values: sunset, sunrise
    event: sunset
    # Optional time offset. This example is 45 minutes.
    offset: '-01:45:00'
- alias: "Office motion sensor off when sun coming up"
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.office_motion_sensor_disable
  trigger:
    platform: sun
    # Possible values: sunset, sunrise
    event: sunrise
    # Optional time offset. This example is 45 minutes.
    offset: '+00:45:00'

###############################################################
#   Xiaomi gateway alarm trigger
###############################################################
- alias: "xiaomi gateway alarm 01"
  trigger:
    - platform: state
      entity_id: input_boolean.xiaomi_alarm_repeat
      from: 'off'
      to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: script.xiaomi_gateway_alarm
###############################################################
####              JARVIS end of day report                  ### 
###############################################################
# moved to Homekit 'Going Upstairs' scene
#
#- alias: JARVIS Report
#  trigger:
#    - platform: state
#      entity_id: light.bedside_lamp
#      from: 'off'
#      to: 'on'
#  action:
#    - service: script.turn_on
#      entity_id: script.tts_status_report


###############################################################
####         HomeAssistant startup notification             ### 
###############################################################
- alias: HomeAssistant startup notification
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: start
  action:
    - service: script.house_announce_downstairs
      data_template:
        tts_msg: "Home Assistant, System startup complete"
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.speakers_living_room_switch
          - switch.speakers_office_switch
          - switch.speakers_kitchen_switch
- alias: HomeAssistant shutdown notification
  trigger:
    platform: homeassistant
    # Event can also be 'start'
    event: shutdown
  action:
    - service: xiaomi_aqara.play_ringtone
      data:
        ringtone_id: 22
        ringtone_vol: 10
        gw_mac: 04CF8C8FA2AF
    - service: notify.telegram_timhiphonex
      data:
        title: 'HA shutdown'
        message: "Home Assistant system shutdown initiated"
# this stopped working in late 2019, now says nothing
#    - service: media_player.volume_set
#      data:
#        entity_id: media_player.dining_room_speaker
#        volume_level: 0.4
#    - delay: 00:00:01
#    - service: script.house_announce_downstairs
#      data_template:
#        tts_msg: "Home Assistant, System shutdown initiated"

####################
# Announce status change!!! (goes with matching script) !!!
#####################
#- alias: Bedroom light
#  trigger:
#    platform: state
#    entity_id: light.bedside_lamp
#    to: 'on'
#  action:
#    - service: script.audio_notify
#      data_template:
#        tts_msg: "The {{ trigger.to_state.attributes.friendly_name }} is: {{ trigger.to_state.state }}"
#        mplayer: "living_room_echo"
#
######## Test Input Select with variable #################
- alias: Start radio station variable
  trigger:
    - platform: state
      entity_id: input_select.itunesplaylist_variable
  action:
    service: media_player.play_media
    data_template:
      entity_id: media_player.itunes
      media_content_id: >
        {% if is_state("input_select.itunesplaylist_variable", "Block Party") %}
          block-party
        {%-elif is_state("input_select.itunesplaylist_variable", "Radio 2") %}
          radio2
        {%-elif is_state("input_select.itunesplaylist_variable", "Radio 3") %}
          radio3
        {%-elif is_state("input_select.itunesplaylist_variable", "Radio 4") %}
          radio4
        {%-elif is_state("input_select.itunesplaylist_variable", "Radio 5 live") %}
          radio5live
        {%-elif is_state("input_select.itunesplaylist_variable", "TalkSport") %}
          talksport
        {%-elif is_state("input_select.itunesplaylist_variable", "Jazz Radio") %}
          jazz-radio
        {%-elif is_state("input_select.itunesplaylist_variable", "Oz Radio") %}
          oz-radio
        {%-elif is_state("input_select.itunesplaylist_variable", "Podcasts") %}
          podcastshuffle
        {% else %}
          none
        {% endif %}
      media_content_type: playlist

######## Test Input Select with variable test 2 - use variable as media_content_id #################
- alias: Start radio station variable test 2
  trigger:
    - platform: state
      entity_id: input_select.itunesplaylist_variable_test2
  action:
    service: media_player.play_media
    data_template:
      entity_id: media_player.itunes
      media_content_id: > 
        {{ states('input_select.itunesplaylist_variable_test2') }}
      media_content_type: playlist


########################################################################
########       Subwoofer when Receiver on        #########
########################################################################
- alias: "Turn on subwoofer with Receiver/TV"
  trigger:
    - platform: state
      entity_id: media_player.pioneer_avr
      to: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.tuya_smart_plug_4
- alias: "Turn off subwoofer with Receiver/TV"
  trigger:
    - platform: state
      entity_id: media_player.pioneer_avr
      to: 'off'
  action:
    - service: switch.turn_off
      entity_id: switch.tuya_smart_plug_4
########################################################################
########       Movie lights when movie playing at night        #########
########################################################################
- alias: "Living Room media player paused"
  trigger:
    - platform: state
      entity_id: media_player.plex_plex_for_apple_tv_living_room
      from: 'playing'
      to: 'paused'
    - platform: state
      entity_id: media_player.plex_plex_for_apple_tv_living_room
      from: 'playing'
      to: 'idle'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ state_attr("media_player.plex_plex_for_apple_tv_living_room", "media_content_type") == "movie" }}'
    - condition: time
      # after kids are in bed
      after: '20:00:00'
      before: '05:00:00'
  action:
    # - service: script.turn_on
    #   entity_id: script.lighting_scene_gaming_mode
# living room
    - service: light.turn_on
      entity_id: light.living_room_light_1
      data:
        xy_color: [0.284,0.108]
        brightness: 255
        transition: 3
    - service: light.turn_on
      entity_id: light.living_room_light_2
      data:
        xy_color: [0.6,0.365]
        brightness: 255
        transition: 3
    - service: light.turn_on
      entity_id: light.living_room_sofa
      data:
        xy_color: [0.226,0.118]
        brightness: 255
        transition: 3
    - service: light.turn_on
      entity_id: light.reading_light
      data:
        xy_color: [0.611,0.306]
        brightness: 255
        transition: 3

- alias: "Living Room media player playing"
  trigger:
    - platform: state
      entity_id: media_player.plex_plex_for_apple_tv_living_room
      to: 'playing'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ state_attr("media_player.plex_plex_for_apple_tv_living_room", "media_content_type") == "movie" }}'
    - condition: time
      # after kids are in bed
      after: '20:00:00'
      before: '05:00:00'
  action:
    # - service: switch.turn_on
    #   entity_id: switch.lighting_scene_movie_mode
    - service: media_player.media_pause
      entity_id: media_player.itunes
# living room
    - service: light.turn_on
      entity_id: light.living_room_light_1
      data:
        xy_color: [0.585,0.276]
        brightness: 119
        transition: 3
    - service: light.turn_on
      entity_id: light.living_room_light_2
      data:
        xy_color: [0.67,0.325]
        brightness: 137
        transition: 3
    - service: light.turn_on
      entity_id: light.living_room_sofa
      data:
        xy_color: [0.226,0.118]
        brightness: 32
        transition: 3
    - service: light.turn_on
      entity_id: light.reading_light
      data:
        xy_color: [0.611,0.306]
        brightness: 32
        transition: 3

########################################################################
########          iTunes live feedback volume slider           #########
########################################################################
- alias: iTunes adjust volume
  trigger:
    platform: state
    entity_id: input_number.airplay_volume
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.itunes
        volume_level: '{{ trigger.to_state.state }}'
- alias: slider sync with actual iTunes volume
  trigger:
    platform: state
    entity_id: media_player.itunes
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: media_player.itunes
        state: 'standby'
      - condition: state
        entity_id: media_player.itunes
        state: 'paused'
      - condition: state
        entity_id: media_player.itunes
        state: 'playing'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: "{{ states.media_player.itunes.attributes.volume_level }}"

########################################################################
###  iTunes volume switches for Siri ("Block Party louder" input boolean)  #########
########################################################################
# Increase volume by 10% 
- alias: Increase volume by 10%
  trigger:
    - platform: state
      entity_id: input_boolean.increase_airplay_vol
      to: "on"
  action:
    - service: media_player.volume_up
      data:
        entity_id: media_player.itunes
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.increase_airplay_vol
# Decrease volume by 10% 
- alias: Decrease volume by 10%
  trigger:
    - platform: state
      entity_id: input_boolean.decrease_airplay_vol
      to: "on"
  action:
    - service: media_player.volume_down
      data:
        entity_id: media_player.itunes
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.decrease_airplay_vol

###################
## Block Party louder from mobile app
##
- alias: Block Party louder from watch
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: block_party_louder
  action:
    - service: media_player.volume_up
      data:
        entity_id: media_player.itunes
- alias: Block Party quieter from watch
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: block_party_quieter
  action:
    - service: media_player.volume_down
      data:
        entity_id: media_player.itunes

########################################################################
########                   Changing AV source                  #########
######################################################################## 
- alias: Change source based on Input Select
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'AppleTV'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'AppleTV'
- alias: Change source based on Input Select 2
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'PS4'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'PS4'
- alias: Change source based on Input Select 3
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'XB1'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'XB1'
- alias: Change source based on Input Select 4
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'YouView'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'YouView'
- alias: Change source based on Input Select 5
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'Nintendo Switch'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'NINTENDO'
- alias: Change source based on Input Select 6
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'Xbox 360'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'XBOX360'
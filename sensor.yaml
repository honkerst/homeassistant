########################################################################
########                       Sensors                         #########
######################################################################## 
  - platform: plex
    host: 192.168.0.2
    username: !secret plex_username
    password: !secret plex_password
  - platform: hue_custom
  #
  # Weather prediction
  #
  - platform: yr
    name: Weather
    forecast: 24
    monitored_conditions:
      - temperature
      - symbol
      - precipitation
      - windSpeed
      - pressure
      - windDirection
      - humidity
      - fog
      - cloudiness
      - lowClouds
      - mediumClouds
      - highClouds
      - dewpointTemperature
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
  #
  # CPU temperature
  #
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  #
  # World Clock
  #
  - platform: worldclock
    time_zone: Asia/Hong_Kong
  #
  # Speed Test
  #
#  - platform: speedtest
#    minute: 30
#    hour:
#      - 0
#      - 6
#      - 12
#      - 18
#    monitored_conditions:
#      - ping
#      - download
#      - upload
  
  #
  # QNAP NAS
  #
  - platform: qnap
    host: 192.168.0.12
    port: 8080
    username: !secret qnap_nas_username
    password: !secret qnap_nas_password
    monitored_conditions:
      - status
      - system_temp
      - cpu_temp
      - cpu_usage
      - memory_free
      - memory_used
      - memory_percent_used
      - network_link_status
      - network_tx
      - network_rx
      - drive_smart_status
      - drive_temp
      - volume_size_free
      - volume_size_used
      - volume_percentage_used
  #
  # Xbox live
  #
  # temporarily disabled as it produces tons of timeout errors in the log
#  - platform: xbox_live
#    api_key: a6bbac3562c0b00da5b2b684dd6dbebbf0953c57
#    xuid:
#      - 2533274921275918
  #
  # Xbox live
  #
  # web scraper to get avatar icon and gamerscore
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/xbox-script/xbox-script-gamerscore.txt'"
    scan_interval: 3600
    name: Xbox gamerscore
  #
  # PSN
  #
  # web scraper to get avatar icon and gamerscore
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-gamerscore.txt'"
    scan_interval: 3600
    name: PSN trophy level
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-trophies.txt'"
    scan_interval: 3600
    name: PSN trophy trophies
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-platinum.txt'"
    scan_interval: 3600
    name: PSN trophy platinum
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-gold.txt'"
    scan_interval: 3600
    name: PSN trophy gold
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-silver.txt'"
    scan_interval: 3600
    name: PSN trophy silver
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/psn-script/psn-script-bronze.txt'"
    scan_interval: 3600
    name: PSN trophy bronze
  #
  # PSN avatar image
  #
  - platform: rest
    name: PSN avatar image URL
    resource: http://192.168.0.2:8888/psn-script/psn-image.json
    value_template: '{{ value_json.0.children[0].src }}'

  - platform: miflora
    # Dracaena marginata
    # Moisture 15-60 %
    # Conductivity 350-2000 µS/cm
    # Light 1500-6000 lux
    # Temp 10-32 °C
    name: Dragon Tree
    mac: 'C4:7C:8D:6A:7E:F9'
    force_update: false
    median: 1
    monitored_conditions:
      - moisture
      - light
      - temperature
      - conductivity
      - battery
  - platform: miflora
    # Howea forsteriana
    # Moisture 15-60 %
    # Conductivity 350-2000 µS/cm
    # Light 1500-25000 lux
    # Temp 8-32 °C
    name: Kentia Palm
    mac: 'C4:7C:8D:6A:7B:9B'
    force_update: false
    median: 1
    monitored_conditions:
      - moisture
      - light
      - temperature
      - conductivity
      - battery

  - platform: rest 
    name: iTunes shuffle status raw
    resource: http://192.168.0.2:8181/now_playing
    value_template: '{{ value_json.shuffle }}'
  
########################################################################
########                       Comedy                          #########
######################################################################## 
  #
  # Ron Swanson 
  #
  - platform: rest
    name: Ron Swanson quote api
    resource: https://ron-swanson-quotes.herokuapp.com/v2/quotes
  #
  # Chuck Norris public API
  #
  #- platform: rest
  #  name: Chuck Norris joke
  #  friendly_name: "Chuck"
  #  resource: https://api.chucknorris.io/jokes/random
  #  value_template: '{{ value_json.value }}'
  #
  # Chuck Norris homemade
  #
  - platform: command_line
    name: Chuck Norris quote
#    friendly_name: "Chuck"
    command: "curl 'http://192.168.0.2:8888/chuck-script/chuck.php'"
    scan_interval: 60
########################################################################
########                  System stats on Mac                  #########
######################################################################## 
  #
  # CPU usage
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-cpuusage-1.txt'"
    scan_interval: 3600
    name: Mac cpu idle percent
  #
  # Mac memory
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-memory-1.txt'"
    scan_interval: 3600
    name: Mac memory resident
  #
  # Mac memory
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-memory-2.txt'"
    scan_interval: 3600
    name: Mac memory private
  #
  # Mac memory
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-memory-3.txt'"
    scan_interval: 3600
    name: Mac memory shared
  #
  # Mac network down
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-networkpackets-3.txt'"
    scan_interval: 3600
    unit_of_measurement: "GB"
    name: Mac network downloaded
  #
  # Mac network up
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/systemstats-networkpackets-4.txt'"
    scan_interval: 3600
    unit_of_measurement: "GB"
    name: Mac network uploaded
  #
  # Mac uptime days
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/uptime-1.txt'"
    scan_interval: 3600
    unit_of_measurement: "days"
    name: Mac uptime days
  #
  # Mac uptime hours
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/uptime-2.txt'"
    scan_interval: 3600
    unit_of_measurement: "hours"
    name: Mac uptime hours
  #
  # Mac uptime minutes
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/systemstats/uptime-3.txt'"
    scan_interval: 3600
    unit_of_measurement: "minutes"
    name: Mac uptime minutes
########################################################################
########                   SpeedTest on Mac                    #########
######################################################################## 
  #
  # SpeedTest download
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/speedtest/speedtest-download.txt'"
    scan_interval: 3600
    name: speedtest download data
  #
  # SpeedTest upload
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/speedtest/speedtest-upload.txt'"
    scan_interval: 3600
    name: speedtest upload data
  #
  # SpeedTest ping
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/speedtest/speedtest-ping.txt'"
    scan_interval: 3600
    name: speedtest ping data
########################################################################
########                    Bin collections                    #########
######################################################################## 
# Based on https://community.home-assistant.io/t/bin-waste-collection/55451
  #
  # Bin collection colour
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/bin-collection-script/binCollection-colour.txt'"
    scan_interval: 86400
    name: bin recycling colour data
  #
  # Bin collection date
  #
  - platform: command_line
    command: "curl 'http://192.168.0.2:8888/bin-collection-script/binCollection-date.txt'"
    scan_interval: 86400
    name: bin recycling date data
########################################################################
########                 Police report sensors                 #########
######################################################################## 
  #
  # Local police report count example
  #
  - platform: command_line
    command: "curl 'https://data.police.uk/api/crimes-street/burglary?lat=52.01027899617981&lng=0.2444242008865558' | jq length"
    scan_interval: 86400
    name: local burglary count

  #
  # Local police reports, by category
  # Lots of replacing (e.g. 'St' for 'Street') to try and keep the state below 255 chars
  - platform: rest
    name: Local crime antisocial
    resource: https://data.police.uk/api/crimes-street/anti-social-behaviour?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime burglary
    resource: https://data.police.uk/api/crimes-street/burglary?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime criminal damage arson
    resource: https://data.police.uk/api/crimes-street/criminal-damage-arson?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime drugs
    resource: https://data.police.uk/api/crimes-street/drugs?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime other theft
    resource: https://data.police.uk/api/crimes-street/other-theft?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime possession of weapons
    resource: https://data.police.uk/api/crimes-street/possession-of-weapons?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime public order
    resource: https://data.police.uk/api/crimes-street/public-order?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime robbery
    resource: https://data.police.uk/api/crimes-street/robbery?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime shoplifting
    resource: https://data.police.uk/api/crimes-street/shoplifting?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime theft from the person
    resource: https://data.police.uk/api/crimes-street/theft-from-the-person?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime vehicle crime
    resource: https://data.police.uk/api/crimes-street/vehicle-crime?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime violent crime
    resource: https://data.police.uk/api/crimes-street/violent-crime?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
  - platform: rest
    name: Local crime other crime
    resource: https://data.police.uk/api/crimes-street/other-crime?lat=52.01027899617981&lng=0.2444242008865558
    scan_interval: 86400
    value_template: > 
      {% for x in value_json %}
        {{ loop.index }}.{{ x.location.street.name|replace('On or near ','')|replace(' Street','St')|replace(' Yard','Yd')|replace(' Court','Ct')|replace('Mount Pleasant Road','MtPleasant')|replace(' Road','')|replace('Emson Close','EmsonCl')|replace('Laws Close','LawsCl')|replace('Orchard Close','Orchard Cl')|replace('Auton Croft','AutonCr')|replace(' Gardens','Gdn')|replace(' Row','Rw')|replace(' Lane','Ln')|replace('Parking Area','Carpark')|replace('Sports/recreation Area','SportsGnd') }}
      {% endfor %}
      
########################################################################
########################################################################
########                    Template sensors                   #########
######################################################################## 
########################################################################
  - platform: template
    sensors:
      #
      # Energy monitor 1
      #
      energy_monitor_1_amps:
        friendly_name: "Current Amperage"
        value_template: '{{ states.switch.energy_monitor_1.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      energy_monitor_1_watts:
        friendly_name: "Current Wattage"
        value_template: '{{ states.switch.energy_monitor_1.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      energy_monitor_1_kw:
        friendly_name: "Total Energy"
        value_template: '{{ states.switch.energy_monitor_1.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      energy_monitor_1_kw_today:
        friendly_name: "Today's Energy"
        value_template: '{{ states.switch.energy_monitor_1.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'      
      energy_monitor_1_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.energy_monitor_1.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'
      #
      # Is Tim in bed
      #
      detect_tim_in_bed:
        friendly_name: "Bed status"
        value_template: "{% if is_state('sensor.detect_tim_in_bed_raw', 'Charging') %}Tim is in bed{% else %}Tim is not in bed{% endif %}"
      detect_tim_in_bed_raw:
        friendly_name: "Bed status raw"
        value_template: "{{ state_attr('sensor.timh_iphonex_battery_level', 'Battery State') }}"
      #
      # Office motion last detected
      #
      motion_last_detected_office:
        friendly_name: "Last triggered"
        value_template: >-
          {{ as_timestamp(states.binary_sensor.office_motion_sensor.last_updated) | timestamp_custom('%I:%M %p, %a %d %b') }}
      #
      # Landing motion last detected
      #
      motion_last_detected_landing:
        friendly_name: "Last triggered"
        value_template: >-
          {{ as_timestamp(states.binary_sensor.landing_motion_sensor.last_updated) | timestamp_custom('%I:%M %p, %a %d %b') }}
      #
      # Porch motion last detected
      #
      motion_last_detected_porch:
        friendly_name: "Last triggered"
        value_template: >-
          {{ as_timestamp(states.binary_sensor.porch_motion_sensor.last_updated) | timestamp_custom('%I:%M %p, %a %d %b') }}
      #
      # Downstairs loo motion last detected - add 1 hour for Xiaomi UTC time correction - might not work in winter?
      #
      motion_last_detected_downstairs_loo:
        friendly_name: "Last triggered"
        value_template: >-
          {{ as_timestamp(states.input_datetime.downstairs_loo_motion_sensor_last_updated.state ~ '+01:00') | timestamp_custom('%I:%M %p, %a %d %b') }}
      
      #
      # Plex watching status
      #
      plex_watching_status:
        friendly_name: "Plex watching status"
        value_template: >-
          {% for attr in states.sensor.plex.attributes %}
          {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" -%}
           {{attr}} is watching {{states.sensor.plex.attributes[attr]}}. 
           
           
           {{- '\n' -}}
          {%- endif %}
          {%- endfor -%}
      #
      # Shuffle status
      #
      itunes_shuffle_status:
        friendly_name: "iTunes shuffle status"
        value_template: >-
          {% if is_state('sensor.itunes_shuffle_status_raw', 'False') %}
            Off
          {% elif is_state('sensor.itunes_shuffle_status_raw', 'songs') %}
            On
          {% else %}
            Unknown
          {% endif %}
      #
      # PSN avatar and trophy level
      #
      psn_avatar_image:
        friendly_name: "PSN rank"
        entity_picture_template: "{{ states('sensor.psn_avatar_image_url') }}"
        value_template: "{{ states('sensor.psn_trophy_level') }}"
      #
      # PSN trophy breakdown
      # (example of building a string in value template)
      #
      psn_trophies_breakdown:
        friendly_name: "PSN trophies"
        entity_picture_template: "{{ states('sensor.psn_avatar_image_url') }}"
        value_template: >-
          {{ states('sensor.psn_trophy_trophies') | string }} ({{ states('sensor.psn_trophy_platinum') | string }}p/{{ states('sensor.psn_trophy_gold') | string }}g/{{ states('sensor.psn_trophy_silver') | string }}s/{{ states('sensor.psn_trophy_bronze') | string }}b)
      #
      # Mac CPU sensor, subtract idle percentage from 100
      #
      mac_cpu_idle_percent_output:
        friendly_name: "Mac CPU usage:"
        unit_of_measurement: '%'
        value_template: "{{ (100 - states('sensor.mac_cpu_idle_percent')|float) | round(2) }}"
      #
      # Mac memory sensor, add up values
      #
      mac_memory_usage_output:
        friendly_name: "Mac memory usage:"
        unit_of_measurement: 'MB'
        value_template: "{{ states('sensor.mac_memory_resident')|float + states('sensor.mac_memory_private')|float + states('sensor.mac_memory_shared')|float }}"
      #
      # Mac memory sensor, add up values
      #
      mac_memory_free_output:
        friendly_name: "Mac memory available:"
        unit_of_measurement: 'MB'
        value_template: "{{ 24572 - states('sensor.mac_memory_resident')|float - states('sensor.mac_memory_private')|float - states('sensor.mac_memory_shared')|float }}"
      #
      # Mac uptime hours, calculate total
      #
      mac_uptime_in_hours:
        friendly_name: "Mac uptime in hours:"
        unit_of_measurement: 'hours'
        value_template: "{{ states('sensor.mac_uptime_hours')|float + states('sensor.mac_uptime_days')|multiply(24)|float }}"
      #
      # Speedtest on Mac download sensor, convert bits to megabits
      #
      speedtest_download:
        friendly_name: "Internet download:"
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.speedtest_download_data') | multiply(0.00000095367432) | round(2) }}"
      #
      # Speedtest on Mac upload sensor, convert bits to megabits
      #
      speedtest_upload:
        friendly_name: "Internet upload:"
        unit_of_measurement: 'Mb/s'
        value_template: "{{ states('sensor.speedtest_upload_data') | multiply(0.00000095367432) | round(2) }}"
      #
      # Speedtest on Mac ping sensor
      #
      speedtest_ping:
        friendly_name: "Internet ping times:"
        unit_of_measurement: 'ms'
        value_template: "{{ states('sensor.speedtest_ping_data') }}"
      #
      # Bin collection day sensor - remove quotation marks
      #
      bin_recycling_date:
        friendly_name: "Date:"
        value_template: "{{ states('sensor.bin_recycling_date_data')|replace('\"','') }}"
      #
      # Bin collection colour sensor - capitalise
      #
      bin_recycling_colour:
        friendly_name: "Colour:"
        value_template: >-
          {% if is_state('sensor.bin_recycling_colour_data', 'green') %}
            Green
          {% elif is_state('sensor.bin_recycling_colour_data', 'black') %}
            Black
          {% else %}
            Unknown
          {% endif %}
      #
      # Ron Swanson - remove [" and "]
      #
      ron_swanson_quote:
        friendly_name: "Ron"
        value_template: "{{ states('sensor.ron_swanson_quote_api')|replace('[\"','')|replace('\"]','') }}"
      #
      # Door & window sensors
      #
      window_kitchen:
        friendly_name: "Kitchen window"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0002c78cfb', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0002c78cfb', 'on') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}
      window_fridge:
        friendly_name: "Fridge door"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0002fd42a2', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0002fd42a2', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}
      window_dining_room:
        friendly_name: "Dining room window"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0002fd436f', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0002fd436f', 'on') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}
      window_freezer:
        friendly_name: "Freezer door"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d00032b7e3a', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d00032b7e3a', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}
      window_right_shed_door:
        friendly_name: "Right shed door"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0003cd4077', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0003cd4077', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}
      window_side_alley_gate:
        friendly_name: "Side alley gate"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0003cd4254', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0003cd4254', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}
      window_left_shed_door:
        friendly_name: "Left shed door"
        value_template: "{% if is_state('binary_sensor.door_window_sensor_158d0004137f49', 'on') %}Open{% else %}Closed{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.door_window_sensor_158d0004137f49', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}
      #
      # Flood sensors
      #
      flood_sensor_kitchen:
        friendly_name: "Kitchen flood sensor"
        value_template: "{% if is_state('binary_sensor.water_leak_sensor_158d0002879b30', 'on') %}Water detected{% else %}No water detected{% endif %}"
        icon_template: >-
          {% if is_state('binary_sensor.water_leak_sensor_158d0002879b30', 'on') %}
            mdi:water-on
          {% else %}
            mdi:water-off
          {% endif %}
      #
      # Networking sensors
      #
      network_upload:
        friendly_name: "NAS upload"
        unit_of_measurement: 'MB/s'
        value_template: "{{ states('sensor.qnap_nas_network_up_eth1') }}"
      network_download:
        friendly_name: "NAS download"
        unit_of_measurement: 'MB/s'
        value_template: "{{ states('sensor.qnap_nas_network_down_eth1') }}"
      networking_nas:
        friendly_name: "QNAP NAS"
        value_template: "{% if is_state('device_tracker.qnap_nas', 'home') %}Online{% else %}Offline{% endif %}"
      networking_asus:
        friendly_name: "Asus N65 router"
        value_template: "{% if is_state('device_tracker.asus_n65u', 'home') %}Online{% else %}Offline{% endif %}"
      networking_xiaomi_gateway:
        friendly_name: "Xiaomi gateway"
        value_template: "{% if is_state('device_tracker.xiaomi_gateway', 'home') %}Online{% else %}Offline{% endif %}"
      networking_tplink:
        friendly_name: "Honknet Kitchen wifi"
        value_template: "{% if is_state('device_tracker.tp_link_wifi_router', 'home') %}Online{% else %}Offline{% endif %}"
      networking_airportextreme:
        friendly_name: "Honknet Office wifi"
        value_template: "{% if is_state('device_tracker.airport_extreme', 'home') %}Online{% else %}Offline{% endif %}"
      networking_airportsofa:
        friendly_name: "Airport Express Sofa"
        value_template: "{% if is_state('device_tracker.sofa_airport_express', 'home') %}Online{% else %}Offline{% endif %}"
      networking_airportkitchen:
        friendly_name: "Airport Express Kitchen"
        value_template: "{% if is_state('device_tracker.kitchen_airport_express', 'home') %}Online{% else %}Offline{% endif %}"
      networking_airportoffice:
        friendly_name: "Airport Express Office"
        value_template: "{% if is_state('device_tracker.office_airport_express', 'home') %}Online{% else %}Offline{% endif %}"
      #
      # Battery sensors with variable icon
      #
      motion_sensor_battery_fridge:
        friendly_name: "Fridge door sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.door_window_sensor_158d0002fd42a2', 'battery_level')|round(0) }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_fridge')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_freezer:
        friendly_name: "Freezer door sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.door_window_sensor_158d00032b7e3a', 'battery_level')|round(0) }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_freezer')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_dining_room_window:
        friendly_name: "Dining room window sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.door_window_sensor_158d0002fd436f', 'battery_level')|round(0) }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_dining_room_window')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_kitchen_window:
        friendly_name: "Kitchen window sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.door_window_sensor_158d0002c78cfb', 'battery_level')|round(0) }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_kitchen_window')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_landing:
        friendly_name: "Landing sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.landing_motion_sensor', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_landing')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_office:
        friendly_name: "Office sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.office_motion_sensor', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_office')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      motion_sensor_battery_porch:
        friendly_name: "Porch sensor:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('binary_sensor.porch_motion_sensor', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.motion_sensor_battery_porch')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      switch_battery_living_room:
        friendly_name: "Living Room switch:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.living_room_switch', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.switch_battery_living_room')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      switch_battery_dining_room:
        friendly_name: "Dining Room switch:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.dining_room_switch', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.switch_battery_dining_room')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      switch_battery_office:
        friendly_name: "Office switch:"
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.office_switch', 'battery') }}"
        icon_template: >-
          {% set battery_level = states('sensor.switch_battery_office')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      # 
      # UK holidays
      # 
      # Get next UK holiday from calendar
      nextukholiday:
        friendly_name: "Upcoming:"
        value_template: "{{ state_attr('calendar.holidays_in_united_kingdom', 'message') }}"
      # Get date
      nextukholidaydate:
        friendly_name: "Date raw"
        value_template: "{{ state_attr('calendar.holidays_in_united_kingdom', 'start_time') }}"
      # Format date
      nextukholiday_formatted:
        friendly_name: "Date:"
        value_template: "{{ as_timestamp(states.calendar.holidays_in_united_kingdom.attributes.start_time) | timestamp_custom('%A %-d %B') }}"
      # 
      # Solar stuff
      # 
      solar_angle:
        friendly_name: "Sun angle"
        unit_of_measurement: '°'
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"
      sunrise:
        value_template: "{{ state_attr('sun.sun', 'next_rising') }}"
      sun_state:
        friendly_name: "Sun State"
        value_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            Up
          {% else %}
            Down
          {% endif %}
        icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:weather-sunny
          {% else %}
            mdi:weather-night
          {% endif %}
      # 
      # Home light levels
      # 
      hue_motion_landing_lux:
        friendly_name: "Landing"
        unit_of_measurement: 'lux'
        value_template: "{{ state_attr('binary_sensor.landing_motion_sensor', 'lx') }}"
      hue_motion_office_lux:
        friendly_name: "Office"
        unit_of_measurement: 'lux'
        value_template: "{{ state_attr('binary_sensor.office_motion_sensor', 'lx') }}"
      hue_motion_porch_lux:
        friendly_name: "Porch"
        unit_of_measurement: 'lux'
        value_template: "{{ state_attr('binary_sensor.porch_motion_sensor', 'lx') }}"
      # 
      # Home temperatures
      # 
      hue_landing_temperature:
        friendly_name: "Landing"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('binary_sensor.landing_motion_sensor', 'temperature') }}"
      hue_office_temperature:
        friendly_name: "Office"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('binary_sensor.office_motion_sensor', 'temperature') }}"
      hue_porch_temperature:
        friendly_name: "Porch"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('binary_sensor.porch_motion_sensor', 'temperature') }}"
      lyric_living_room_temperature:
        friendly_name: "Living room"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('climate.lyric', 'current_temperature') }}"
      # 
      # Home upcoming actions
      # 
      # Get next action from Home Automation Google calendar
      upcoming_home_action:
        friendly_name: "Next action:"
        value_template: "{{ state_attr('calendar.automatornew', 'message') }}"
      # Get time in hours/minutes
      upcoming_home_action_time:
        friendly_name: "Time"
        value_template: "{{ as_timestamp(states.calendar.automatornew.attributes.start_time) | timestamp_custom('%H%M hours') }}"
      # Subtract time from current time, calculate hours, make positive
      time_until_home_action:
        unit_of_measurement: hours
        friendly_name: "Occuring in:"
        value_template: "{{ (((as_timestamp(now()) - as_timestamp(states.calendar.automatornew.attributes.start_time))/3600) | round(1)) / -1 }}"
        entity_id: sensor.time
      # Match events to calendar event names
      upcoming_home_action_fix:
        friendly_name: "Next server actvity"
        value_template: >-
          {% if is_state('sensor.upcoming_home_action', 'Restart PMS') %}
            Plex nightly reboot
          {% elif is_state('sensor.upcoming_home_action', 'DailyBlockPartyAlarm') %}
            Randomise music playlist
          {% elif is_state('sensor.upcoming_home_action', 'BBCR4 - Unbelievable Truth') %}
            BBC R4 - Unbelievable Truth
          {% elif is_state('sensor.upcoming_home_action', 'Start H&J') %}
            Talksport - H&J
          {% elif is_state('sensor.upcoming_home_action', 'Start music') %}
            Background music
          {% endif %}
        icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:weather-sunny
          {% else %}
            mdi:weather-night
          {% endif %}
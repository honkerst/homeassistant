########################################################
## CONFIG
########################################################
counter:
  internet_outages:
    name: Internet outages
    icon: mdi:ip-network
    initial: 0
    step: 1

input_number:
  internet_outages_last_week:
    name: Outages last week
    min: 0
    max: 9999
    step: 1


########################################################
## SENSORS
########################################################
sensor:


########################################################
## SCRIPTS
########################################################
script:

###################
## internet outage warning
##
  internet_outage_detected:
    alias: Internet outage detected
    sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.dining_room_speaker
        volume_level: 0.4
    - delay: 00:00:01
    # Play local mp3 because Alexa requires internet
    - service: media_player.play_media
      data_template:                 
        entity_id: media_player.dining_room_speaker            
        media_content_id: http://192.168.0.2:8888/mp3/internet-outage.mp3
        media_content_type: 'audio/mp3' 
###################
## internet reconnected
##
  internet_connection_reestablished:
    alias: Internet connection reestablished
    sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.dining_room_speaker
        volume_level: 0.4
    - delay: 00:00:01
    - service: tts.amazon_polly_say
      data_template:
        entity_id: media_player.dining_room_speaker
        message: >
          <speak>
              Internet connection re-established.
          </speak>


########################################################
## AUTOMATIONS
########################################################
automation:
###################
## Internet outage counter
##
  - alias: Internet outage count
    trigger:
      platform: state
      entity_id: binary_sensor.ping_8_8_8_8
      from: 'on'
      to: 'off'
      for:
        seconds: 30
    action:
      service: counter.increment
      entity_id: counter.internet_outages

  - alias: Weekly internet outages
    trigger:
      - platform: time
        at: '00:01:00'
    condition:
      - condition: time
        weekday:
          - mon
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.internet_outages_last_week
          value: '{{ states("counter.internet_outages") }}'
      - service: counter.reset
        data_template:
          entity_id: counter.internet_outages
  
###################
## Internet outage notification
##
  - alias: Internet disconnected
    trigger:
      platform: state
      entity_id: binary_sensor.ping_8_8_8_8
      from: 'on'
      to: 'off'
  #    for:
  #      seconds: 5
    action:
  #    - service: homeassistant.turn_on
  #      entity_id: script.xiaomi_gateway_alarm_accident
      - service: media_player.volume_set
        data:
          entity_id: media_player.itunes
          volume_level: 0.1
      - service: homeassistant.turn_on
        entity_id: script.internet_outage_detected
      - delay: 0:00:03
      - service: media_player.volume_set
        data:
          entity_id: media_player.itunes
          volume_level: 0.3
      - service: input_number.set_value
        data_template:
          entity_id: input_number.airplay_volume
          value: 0.3
  - alias: Internet reconnected
    trigger:
      platform: state
      entity_id: binary_sensor.ping_8_8_8_8
      from: 'off'
      to: 'on'
    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.itunes
          volume_level: 0.1
      - service: homeassistant.turn_on
        entity_id: script.internet_connection_reestablished
      - delay: 0:00:03
      - service: media_player.volume_set
        data:
          entity_id: media_player.itunes
          volume_level: 0.3
      - service: input_number.set_value
        data_template:
          entity_id: input_number.airplay_volume
          value: 0.3

###############################################################
####    Testing               ### 
###############################################################
#Â testing remembering Volume and playlist when interrupting iTunes with TTS
#- alias: Volume revert testing
#  trigger:
#    platform: state
#    entity_id: input_boolean.plants_grow_mode
#    to: 'on'
#  action:
#    - service: input_select.select_option
#      data_template:
#        entity_id: input_select.currently_playing_playlist
#        option: "{{ state_attr('media_player.itunes', 'media_playlist') }}"
#    - service: input_number.set_value
#      data_template:
#        entity_id: input_number.current_music_volume
#        value: "{{ state_attr('media_player.itunes', 'volume_level') }}"
#    - service: media_player.volume_set
#      data:
#        entity_id: media_player.itunes
#        volume_level: 0.6
#    - service: media_player.play_media
#      data_template:
#        entity_id: media_player.itunes
#        media_content_id: 'Radio 4'
#        media_content_type: playlist
#    - delay: 0:00:03
#    - service: media_player.volume_set
#      data_template:
#        entity_id: media_player.itunes
#        volume_level: "{{states.input_number.current_music_volume.state}}"
#    - service: input_number.set_value
#      data_template:
#        entity_id: input_number.airplay_volume
#        value: "{{states.input_number.current_music_volume.state}}"
#    - service: media_player.play_media
#      data_template:
#        entity_id: media_player.itunes
#        media_content_id: > 
#          {% if is_state("input_select.current_music_volume", "Block Party") %}
#            block-party
#          {%-elif is_state("input_select.current_music_volume", "Radio 2") %}
#            radio2
#          {%-elif is_state("input_select.current_music_volume", "Radio 3") %}
#            radio3
#          {%-elif is_state("input_select.current_music_volume", "Radio 4") %}
#            radio4
#          {%-elif is_state("input_select.current_music_volume", "Radio 5 live") %}
#            radio5live
#          {%-elif is_state("input_select.current_music_volume", "TalkSport") %}
#            talksport
#          {%-elif is_state("input_select.current_music_volume", "Jazz Radio") %}
#            jazz-radio
#          {%-elif is_state("input_select.current_music_volume", "Oz Radio") %}
#            oz-radio
#          {%-elif is_state("input_select.current_music_volume", "Podcasts") %}
#            podcastshuffle
#          {% else %}
#            none
#          {% endif %}
#        media_content_type: playlist


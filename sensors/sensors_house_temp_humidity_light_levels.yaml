########################################################################
########                    Template sensors                   #########
######################################################################## 
########################################################################
  - platform: template
    sensors:
      # 
      # Home humidity levels
      # 
#      aqara_dining_humidity:
#        friendly_name: "Dining humidity"
#        unit_of_measurement: '%'
#        value_template: "{{ states('sensor.humidity_158d0004089a4c') }}"
#      lcd_monitor_humidity:
#        friendly_name: "LCD humidity monitor"
#        unit_of_measurement: '%'
#        value_template: "{{ states('sensor.mi_h_582d3438aab9') }}"
      # 
      # Home temperatures
      # 
#      aqara_dining_temperature:
#        friendly_name: "Dining"
#        unit_of_measurement: '°C'
#        value_template: "{{ states('sensor.temperature_158d0004089a4c') }}"
#      lcd_monitor_temperature:
#        friendly_name: "LCD temperature monitor"
#        unit_of_measurement: '°C'
#        value_template: "{{ states('sensor.mi_t_582d3438aab9') }}"
      hue_landing_temperature:
        friendly_name: "Landing"
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.landing_sensor_temperature') | round(1, 'half', default=0) }}"
      hue_office_temperature:
        friendly_name: "Office"
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.office_sensor_temperature') | round(1, 'half', default=0) }}"
      hue_dining_room_temperature:
        friendly_name: "Dining room"
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.stairs_movement_temperature') | round(1, 'half', default=0) }}"
      hue_kitchen_temperature:
        friendly_name: "Kitchen"
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.kitchen_motion_sensor_temperature') | round(1, 'half', default=0) }}"
      lyric_living_room_temperature:
        friendly_name: "Living room"
        unit_of_measurement: '°C'
        value_template: "{{ state_attr('climate.lyric', 'current_temperature') }}"
      # 
      # Home light levels
      # 
      gateway_loft_lux:
        friendly_name: "Gateway lux"
        unit_of_measurement: 'lux'
        value_template: "{{ (( states('sensor.illumination_04cf8c8fa2af') ) | round(1, default=0)) * 2 }}"
      # 
      # record kitchen light levelwhen lights are off
      # automation will turn lights on if below 50 lux
      # 
      kitchen_motion_sensor_light_level_lights_off:
        friendly_name: "Kitchen motion sensor light level when light off"
        unit_of_measurement: 'lux'
        # 1 is arbitrary  value, approx 500 when lights are on
        value_template: >
          {% if states('switch.wall_switch_left_158d00030a7792') == 'off' and
                states('switch.wall_switch_right_158d00030a7792') == 'off' and
                states('switch.wall_switch_left_158d0003669ca2') == 'off' and
                states('switch.wall_switch_right_158d0003669ca2') == 'off' and
                states('sensor.kitchen_motion_sensor_light_level')|int < 300 %}
            {{ states('sensor.kitchen_motion_sensor_light_level') | round(1, default=0) }}
          {% else %}
            1
          {% endif %}

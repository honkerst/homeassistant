###############################################################
####             Plex play notifications                    ### 
###############################################################
- alias: "Plex play notification"
  trigger:
    platform: state
    entity_id: sensor.plex
  action:
    service: notify.ios_timiphonex
    data_template:
      message: >
        {% for attr in states.sensor.plex.attributes %}
        {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" -%}
         {{attr}} is watching {{states.sensor.plex.attributes[attr]}}. 
         
         
         {{- '\n' -}}
        {%- endif %}
        {%- endfor -%}
###############################################################
####   Record last_updated time for Xiaomi motion sensors   ### 
###############################################################
- alias: "Downstairs loo motion sensor record time triggered"
  hide_entity: true
  initial_state: true
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.motion_sensor_158d0002247bba
  action:
  - service: input_datetime.set_datetime
    entity_id: input_datetime.downstairs_loo_motion_sensor_last_updated
    data_template:
      time: "{{ now().strftime('%H:%M:%S') }}"
      date: "{{ as_timestamp(now() ~ '-01:00')|timestamp_custom('%Y-%m-%d') }}"
###############################################################
####  Office motion sensor, only at night                   ### 
###############################################################
- alias: "Office motion sensor on when dark outside"
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.office_motion_sensor_toggle
  trigger:
    platform: sun
    # Possible values: sunset, sunrise
    event: sunset
    # Optional time offset. This example is 45 minutes.
    offset: '-00:45:00'
- alias: "Office motion sensor off when sun coming up"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.office_motion_sensor_toggle
  trigger:
    platform: sun
    # Possible values: sunset, sunrise
    event: sunrise
    # Optional time offset. This example is 45 minutes.
    offset: '-00:45:00'

###############################################################
####             Welcome home message                      ### 
###############################################################
####   When I trigger porch light, and arrived home in last 60 seconds
- alias: Tim Arriving Home
  hide_entity: true
  initial_state: true
  trigger:
    platform: state
    to: 'on'
    entity_id: binary_sensor.porch_motion_sensor
  condition: 
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.timiphonex
        state: 'home'
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp((states.device_tracker.timiphonex.last_updated)) <60)}}"
      - condition: time
        # At least one of the following is required.
        after: '09:00:00'
        before: '03:30:00'
#        weekday:
#          - mon
#          - tue
#          - thu
  action:
    - service: script.turn_on
      entity_id: script.welcome_home_script
###############################################################
####             Xiaomi gateway sounds                      ### 
###############################################################
- alias: "xiaomi gateway alarm 01"
  hide_entity: true
  trigger:
    - platform: state
      entity_id: input_boolean.xiaomi_alarm_repeat
      from: 'off'
      to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: script.xiaomi_gateway_alarm
###############################################################
####              JARVIS end of day report                  ### 
###############################################################
- alias: JARVIS Report
  trigger:
    - platform: state
      entity_id: light.bedside_lamp
      to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.tts_status_report
###############################################################
####              Fridge door warning                       ### 
###############################################################
- alias: Fridge door timer start
  trigger:
    platform: state
    entity_id: sensor.window_fridge
    to: 'Open'
  action:
  - service: timer.start
    data:
      entity_id: timer.fridge_door
- alias: Fridge door warning
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.fridge_door
  condition:
    condition: state
    entity_id: sensor.window_fridge
    state: 'Open'
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "The fridge door is open."
        mplayer: "kitchen_echo_show"
    - service: timer.start
      data:
        entity_id: timer.fridge_door
###############################################################
####              Freezer door warning                       ### 
###############################################################
- alias: Freezer door timer start
  trigger:
    platform: state
    entity_id: sensor.window_freezer
    to: 'Open'
  action:
  - service: timer.start
    data:
      entity_id: timer.freezer_door
- alias: Freezer door warning
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.freezer_door
  condition:
    condition: state
    entity_id: sensor.window_freezer
    state: 'Open'
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "The freezer door is open."
        mplayer: "kitchen_echo_show"
    - service: timer.start
      data:
        entity_id: timer.freezer_door
################################################################
#### Turn off Downstairs loo light after 3 mins if no motion ### 
################################################################
- alias: Start downstairs loo timer
  trigger:
    platform: state
    entity_id: switch.wall_switch_158d000309dd3f
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.downstairs_loo_timer_disable
    state: 'off'
  action:
  - service: timer.start
    data:
      entity_id: timer.downstairsloo
- alias: Reset downstairs loo timer on movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d0002247bba
    to: 'on'
  condition:
    condition: and
    conditions: 
      - condition: state
        entity_id: input_boolean.downstairs_loo_timer_disable
        state: 'off'
      - condition: state
        entity_id: timer.downstairsloo
        state: 'active'
  action:
  - service: timer.start
    data:
      entity_id: timer.downstairsloo
- alias: Turn off downstairs loo light after timer
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.downstairsloo
  condition:
    condition: state
    entity_id: binary_sensor.motion_sensor_158d0002247bba
    state: 'off'
  action:
    service: homeassistant.turn_off
    data:
      entity_id: switch.wall_switch_158d000309dd3f
################################################################
#### Turn on Downstairs loo light when motion detected ### 
################################################################
- alias: Turn on Downstairs loo light when motion detected
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d0002247bba
    to: 'on'
  condition:
    condition: state
    entity_id: switch.wall_switch_158d000309dd3f
    state: 'off'
  action:
    service: homeassistant.turn_on
    data:
      entity_id: switch.wall_switch_158d000309dd3f
###############################################################
####         Internet outage notification                   ### 
###############################################################
- alias: Internet disconnected
  trigger:
    platform: state
    entity_id: binary_sensor.ping_binary_sensor
    from: 'on'
    to: 'off'
  action:
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_accident
    - service: homeassistant.turn_on
      entity_id: script.check_block_party_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_podcasts_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_jazz_radio_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_oz_radio_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio2_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio3_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_radio4_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_talksport_status_outage_warning
    - service: homeassistant.turn_on
      entity_id: script.check_nomusic_status_outage_warning
# This doesn't work because Alexa requires internet
#    - service: script.audio_notify
#      data_template:
#        tts_msg: "Internet outage detected, attempting to reconnect"
#        mplayer: "living_room_echo"
- alias: Internet reconnected
  trigger:
    platform: state
    entity_id: binary_sensor.ping_binary_sensor
    from: 'off'
    to: 'on'
  action:
#    - service: homeassistant.turn_on
#      entity_id: script.xiaomi_gateway_alarm_thinker
    - delay: 0:00:15
    - service: script.audio_notify
      data_template:
        tts_msg: "Internet connection re-established"
        mplayer: "living_room_echo"
###############################################################
####         HomeAssistant startup notification             ### 
###############################################################
- alias: HomeAssistant startup notification
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: start
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "Home Assistant, System startup complete"
        mplayer: "living_room_echo"
- alias: HomeAssistant shutdown notification
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: shutdown
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "Home Assistant, System shutdown initiated"
        mplayer: "living_room_echo"
###############################################################
####         iPhone notification with response              ###
###############################################################
- alias: When Fin gets home, inform Tim Phone
  initial_state: True
  trigger:
    platform: state
    entity_id: device_tracker.fin_iphone
    from: 'not_home'
    to: 'home'
  action:
    service: notify.ios_timiphonex
    data:
      message: "Fin has arrived home."
      data:
        push:
          badge: 1
          # sound: <SOUND FILE HERE>
          category: "finarriveshome" # Needs to match the top level identifier you used in the ios configuration  - Don't forget to 'Update push settings' on the iOS app!
        action_data: # Anything passed in action_data will get echoed back to Home Assistant.
          entity_id: light.test
          my_custom_data: foo_bar
# Tell Kitchen Echo to say Welcome Home
- alias: Welcome home
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: WELCOME_HOME
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "Welcome home Fin!"
        mplayer: "living_room_echo"
# Type a response on phone for Kitchen Echo to read out
- alias: Welcome message
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: WELCOME_MESSAGE
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "{{ trigger.event.data['textInput'] }}"
        mplayer: "living_room_echo"
###############################################################
####         iPhone notification test              ###
###############################################################
- alias: Notifications test
  initial_state: True
  trigger:
    platform: state
    entity_id:  light.bedside_lamp
    from: 'off'
    to: 'on'
  action:
    service: notify.ios_timiphonex
    data:
      message: "Notifications test triggered."
      data:
        push:
          badge: 1
          # sound: <SOUND FILE HERE>
          category: "notificationtest" # Needs to match the top level identifier you used in the ios configuration  - Don't forget to 'Update push settings' on the iOS app!
        action_data: # Anything passed in action_data will get echoed back to Home Assistant.
          entity_id: light.test
          my_custom_data: foo_bar
# Tell Kitchen Echo to say Notification test
- alias: Notification test
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: NOTIFICATION_TEST
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "Notification test"
        mplayer: "living_room_echo"
# Type a response on phone for Kitchen Echo to read out
- alias: Notification alternative
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: NOTIFICATION_ALTERNATIVE
  action:
    - service: script.audio_notify
      data_template:
        tts_msg: "{{ trigger.event.data['textInput'] }}"
        mplayer: "living_room_echo"
###############################################################
####      Game mode turn on rainbow lights separately       ###
###############################################################
- alias: 'game mode turn on random lights'
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.game_mode
        domain: scene
        service: turn_on
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: 
          - input_boolean.random_light_living_room_sofa
    - delay: 0:00:03
    - service: input_boolean.turn_on
      data:
        entity_id: 
          - input_boolean.random_light_reading_light
    - delay: 0:00:03
    - service: input_boolean.turn_on
      data:
        entity_id: 
          - input_boolean.random_light_dining_room
    - delay: 0:00:03
    - service: input_boolean.turn_on
      data:
        entity_id: 
          - input_boolean.random_light_living_room_floor

##############################################################################
######## Sync 'random' input_booleans if lights turned off elsewhere #########
######## Also turning off light turns off random effect script       #########
##############################################################################
- alias: Turn off light switch input_booleans
  trigger:
    - platform: state
      entity_id: light.living_room_sofa
      to: "off"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.random_light_living_room_sofa
- alias: Turn off light switch input_booleans 2
  trigger:
    - platform: state
      entity_id: light.reading_light
      to: "off"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.random_light_reading_light
- alias: Turn off light switch input_booleans 3
  trigger:
    - platform: state
      entity_id: light.dining_room
      to: "off"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.random_light_dining_room
- alias: Turn off light switch input_booleans 4
  trigger:
    - platform: state
      entity_id: light.gateway_light_04cf8c8fa2af
      to: "off"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.random_light_living_room_floor
##############################################################################
######## Sync Airplay speakers input_booleans                        #########
##############################################################################
- alias: Turn off Living Room Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_living_room
      to: "off"
  action:
    - service: switch.turn_off
      data:
        entity_id: 
          - switch.speakers_living_room_switch
- alias: Turn on Living Room Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_living_room
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.speakers_living_room_switch
- alias: Turn off Office Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_office
      to: "off"
  action:
    - service: switch.turn_off
      data:
        entity_id: 
          - switch.speakers_office_switch
- alias: Turn on Office Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_office
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.speakers_office_switch
- alias: Turn off Kitchen Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_kitchen
      to: "off"
  action:
    - service: switch.turn_off
      data:
        entity_id: 
          - switch.speakers_kitchen_switch
- alias: Turn on Kitchen Airplay switch
  trigger:
    - platform: state
      entity_id: input_boolean.speakers_kitchen
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.speakers_kitchen_switch

###############################################################
# Random light living room floor (with matching script)
###############################################################
- alias: Random light living room floor
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_living_room_floor
      to: "on"
  action:
    - service: script.random_light_living_room_floor

- alias: Random light living room floor off
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_living_room_floor
      to: "off"
  action:
    - service: script.turn_off
      entity_id: script.random_light_living_room_floor

###############################################################
# Random light living room sofa (with matching script)
###############################################################
- alias: Random light living room sofa
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_living_room_sofa
      to: "on"
  action:
    - service: script.random_light_living_room_sofa

- alias: Random light living room sofa off
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_living_room_sofa
      to: "off"
  action:
    - service: script.turn_off
      entity_id: script.random_light_living_room_sofa

###############################################################
# Random light reading light (with matching script)
###############################################################
- alias: Random light reading light
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_reading_light
      to: "on"
  action:
    - service: script.random_light_reading_light

- alias: Random light reading light off
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_reading_light
      to: "off"
  action:
    - service: script.turn_off
      entity_id: script.random_light_reading_light


###############################################################
# Random light dining room (with matching script)
###############################################################
- alias: Random light dining room
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_dining_room
      to: "on"
  action:
    - service: script.random_light_dining_room

- alias: Random light dining room off
  trigger:
    - platform: state
      entity_id: input_boolean.random_light_dining_room
      to: "off"
  action:
    - service: script.turn_off
      entity_id: script.random_light_dining_room

######## Testing Alexa TTS with Random message #################
- alias: 'Say good night'
  initial_state: on
  trigger:
    platform: state
    entity_id: light.bedside_lamp
    to: 'off'
  action:
    service: script.turn_on
    entity_id: script.good_night_alexa
- alias: 'Say good morning'
  initial_state: on
  trigger:
    platform: state
    entity_id: light.bedside_lamp
    to: 'on'
  action:
    service: script.turn_on
    entity_id: script.good_night_alexa

####################
# Announce status change!!! (goes with matching script) !!!
#####################
#- alias: Bedroom light
#  trigger:
#    platform: state
#    entity_id: light.bedside_lamp
#    to: 'on'
#  action:
#    - service: script.audio_notify
#      data_template:
#        tts_msg: "The {{ trigger.to_state.attributes.friendly_name }} is: {{ trigger.to_state.state }}"
#        mplayer: "living_room_echo"



######## Test Input Select with variable #################
- alias: Start radio station variable
  trigger:
    - platform: state
      entity_id: input_select.itunesplaylist_variable
  action:
    service: media_player.play_media
    data_template:
      entity_id: media_player.itunes
      media_content_id: >
        {% if is_state("input_select.itunesplaylist_variable", "Block Party") %}
          block-party
        {%-elif is_state("input_select.itunesplaylist_variable", "Radio 4") %}
          radio4
        {%-elif is_state("input_select.itunesplaylist_variable", "TalkSport") %}
          talksport
        {% else %}
          none
        {% endif %}
      media_content_type: playlist

######## Test Input Select with variable test 2 - use variable as media_content_id #################
- alias: Start radio station variable test 2
  trigger:
    - platform: state
      entity_id: input_select.itunesplaylist_variable_test2
  action:
    service: media_player.play_media
    data_template:
      entity_id: media_player.itunes
      media_content_id: > 
        {{ states('input_select.itunesplaylist_variable_test2') }}
      media_content_type: playlist


########################################################################
########     Turn off office lights 3 minutes after motion     #########
########################################################################
- alias: Turn on office light when movement detected
  trigger:
    platform: state
    entity_id: binary_sensor.office_motion_sensor
    to: 'on'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '17:30'
        before: '04:30'
      - condition: state
        entity_id: input_boolean.office_motion_sensor_toggle
        state: 'on'
  action:
    service: script.turn_on
    entity_id: script.work_mode_delayed_office

- alias: Turn off office light 3 minutes after last movement
  trigger:
    platform: state
    entity_id: binary_sensor.office_motion_sensor
    to: 'off'
    for:
      minutes: 3
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '17:30'
        before: '04:30'
      - condition: state
        entity_id: input_boolean.office_motion_sensor_toggle
        state: 'on'
  action:
    service: script.turn_on
    entity_id: script.game_mode_delayed_office

########################################################################
########                      Startup theme                    #########
########################################################################
- alias: 'Set theme at startup'
  initial_state: 'on'
  trigger:
   - platform: homeassistant
     event: start
  action:
    service: frontend.set_theme
    data:
      name: MidnightRed

########################################################################
########       Movie lights when movie playing at night        #########
########################################################################
- alias: "Living Room media player paused"
  trigger:
    - platform: state
      entity_id: media_player.living_room
      from: 'playing'
      to: 'paused'
    - platform: state
      entity_id: media_player.living_room
      from: 'playing'
      to: 'idle'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      # after kids are in bed
      after: '20:00:00'
      before: '05:00:00'
  action:
    - service: scene.turn_on
      entity_id: scene.game_mode

- alias: "Living Room media player playing"
  trigger:
    - platform: state
      entity_id: media_player.living_room
      to: 'playing'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      # after kids are in bed
      after: '20:00:00'
      before: '05:00:00'
  action:
    - service: scene.turn_on
      entity_id: scene.movie_mode
    - service: media_player.media_pause
      entity_id: media_player.itunes

########################################################################
########          iTunes live feedback volume slider           #########
########################################################################
- alias: iTunes adjust volume
  trigger:
    platform: state
    entity_id: input_number.airplay_volume
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.itunes
        volume_level: '{{ trigger.to_state.state }}'
- alias: slider sync with actual iTunes volume
  trigger:
    platform: state
    entity_id: media_player.itunes
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: "{{ states.media_player.itunes.attributes.volume_level }}"
########################################################################
######## Itunes Playlists Automations for Input Boolean panel  #########
########################################################################
# NB The radio stations work by having only one radio station in a playlist named after the same radio station
# NB Add radio stations to playlists by finding the station's stream .m3u link (e.g. from https://www.internet-radio.com) and dragging the URL into a MUSIC playlist in iTunes
# NB 'Block Party' is a playlist created by the excellent Block Party AppleScript which I run once a day via an Automator action https://dougscripts.com/itunes/scripts/ss.php?sp=blockparty
########################################################################
# Start playlist and turn off other playlists 
- alias: Start playlist Block Party
  trigger:
    - platform: state
      entity_id: input_boolean.blockparty_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "block-party"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Radio 2
  trigger:
    - platform: state
      entity_id: input_boolean.radio2_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "radio2"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.blockparty_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Radio 3
  trigger:
    - platform: state
      entity_id: input_boolean.radio3_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "radio3"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.radio2_gui
          - input_boolean.radio4_gui
          - input_boolean.blockparty_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Radio 4
  trigger:
    - platform: state
      entity_id: input_boolean.radio4_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "radio4"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist TalkSport
  trigger:
    - platform: state
      entity_id: input_boolean.talksport_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "talksport"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Oz radio
  trigger:
    - platform: state
      entity_id: input_boolean.ozradio_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "oz-radio"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.talksport_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Jazz radio
  trigger:
    - platform: state
      entity_id: input_boolean.jazzradio_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        media_content_id: "jazz-radio"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.podcasts_gui
- alias: Start playlist Podcasts
  trigger:
    - platform: state
      entity_id: input_boolean.podcasts_gui
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: 
          - switch.itunes_initial_play
    - service: media_player.play_media
      data:
        entity_id: media_player.itunes
        # NB Give your podcasts playlist a name other than 'podcasts' otherwise it will select the entire Podcast library in iTunes 
        media_content_id: "podcastshuffle"
        media_content_type: playlist
    - service: media_player.volume_set
      data:
        entity_id: media_player.itunes
        volume_level: 0.3
    - service: input_number.set_value
      data_template:
        entity_id: input_number.airplay_volume
        value: 0.3
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.talksport_gui
          - input_boolean.ozradio_gui
          - input_boolean.jazzradio_gui

########################################################################
# Test each 'Turn off' command so turning off the other 6 playlists doesn't trigger it 
########################################################################
- alias: Stop playlist - Block Party
  trigger:
    - platform: state
      entity_id: input_boolean.blockparty_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Block Party!' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Radio 2
  trigger:
    - platform: state
      entity_id: input_boolean.radio2_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Radio2' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Radio 3
  trigger:
    - platform: state
      entity_id: input_boolean.radio3_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Radio3' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Radio 4
  trigger:
    - platform: state
      entity_id: input_boolean.radio4_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Radio4' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - TalkSport
  trigger:
    - platform: state
      entity_id: input_boolean.talksport_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'TalkSport' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Oz radio
  trigger:
    - platform: state
      entity_id: input_boolean.ozradio_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Oz radio' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Jazz radio
  trigger:
    - platform: state
      entity_id: input_boolean.jazzradio_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Jazz radio' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
- alias: Stop playlist - Podcasts
  trigger:
    - platform: state
      entity_id: input_boolean.podcasts_gui
      to: "off"
  condition:
    - condition: template
      value_template: "{{ state_attr('media_player.itunes', 'media_playlist') == 'Podcast shuffle' }}"
  action:
    - service: media_player.media_pause
      data:
        entity_id: media_player.itunes
########################################################################
# Sync Input Boolean when playlist re-starts 
# **** This is causing problems (returns to first item in playlist)
########################################################################
#- alias: Sync Block Party when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Block Party!' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.blockparty_gui
#- alias: Sync Radio2 when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio2' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.radio2_gui
#- alias: Sync Radio3 when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio3' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.radio3_gui
#- alias: Sync Radio4 when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio4' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.radio4_gui
#- alias: Sync Podcasts when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Podcasts' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.podcasts_gui
#- alias: Sync Jazz Radio when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Jazz Radio' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.jazz_radio_gui
#- alias: Sync Oz Radio when restarting
#  trigger:
#    platform: state
#    entity_id: media_player.itunes
#    to: 'playing'
#  condition:
#    - condition: template
#      value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Oz Radio' %}true{% endif %}"
#  action:
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.oz_radio_gui
########################################################################
# Sync Input Boolean to playlist status 
########################################################################
- alias: Sync all Input Booleans when iTunes paused
  trigger:
    platform: state
    entity_id: media_player.itunes
    from: 'playing'
#  condition:
#    condition: or
#    conditions:
#      - condition: state
#        entity_id: media_player.itunes
#        state: 'paused'
#      - condition: state
#        entity_id: media_player.itunes
#        state: 'stopped'
#      - condition: state
#        entity_id: media_player.itunes
#        state: 'idle'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.blockparty_gui
          - input_boolean.radio2_gui
          - input_boolean.radio3_gui
          - input_boolean.radio4_gui
          - input_boolean.talksport_gui
          - input_boolean.jazzradio_gui
          - input_boolean.podcasts_gui
- alias: Sync playlist - Block Party
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Block Party!' %}true{% endif %}"
  condition:
    - condition: state
      entity_id: media_player.itunes
      state: 'playing'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.blockparty_gui
- alias: Sync playlist - Radio2
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio2' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.radio2_gui
- alias: Sync playlist - Radio3
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio3' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.radio3_gui
- alias: Sync playlist - Radio4
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Radio4' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.radio4_gui
- alias: Sync playlist - TalkSport
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'TalkSport' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.talksport_gui
- alias: Sync playlist - Oz Radio
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Oz radio' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.ozradio_gui
- alias: Sync playlist - Jazz Radio
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'Jazz radio' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.jazzradio_gui
- alias: Sync playlist - Podcast Shuffle
  trigger:
    platform: template
    value_template: "{% if state_attr('media_player.itunes', 'media_playlist') == 'PodcastShuffle' %}true{% endif %}"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.podcasts_gui

########################################################################
########           iTunes volume switches for Siri             #########
########################################################################
# Increase volume by 10% 
- alias: Increase volume by 10%
  trigger:
    - platform: state
      entity_id: input_boolean.increase_airplay_vol
      to: "on"
  action:
    - service: media_player.volume_up
      data:
        entity_id: media_player.itunes
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.increase_airplay_vol
# Decrease volume by 10% 
- alias: Decrease volume by 10%
  trigger:
    - platform: state
      entity_id: input_boolean.decrease_airplay_vol
      to: "on"
  action:
    - service: media_player.volume_down
      data:
        entity_id: media_player.itunes
    - service: input_boolean.turn_off
      data:
        entity_id: 
          - input_boolean.decrease_airplay_vol
################################################################
#### Control Music/Radio from Siri ### 
################################################################
- alias: Turn off The Music
  trigger:
    platform: state
    entity_id: input_boolean.themusic_gui
    to: 'off'
  action:
  - service: timer.start
    entity_id: timer.turnoffthemusic
  - service: input_boolean.turn_off
    data:
      entity_id: 
        - input_boolean.blockparty_gui
        - input_boolean.radio2_gui
        - input_boolean.radio3_gui
        - input_boolean.radio4_gui
        - input_boolean.talksport_gui
        - input_boolean.ozradio_gui
        - input_boolean.jazzradio_gui
        - input_boolean.podcasts_gui
- alias: Turn off The Radio
  trigger:
    platform: state
    entity_id: input_boolean.theradio_gui
    to: 'off'
  action:
  - service: timer.start
    entity_id: timer.turnofftheradio
  - service: input_boolean.turn_off
    data:
      entity_id: 
        - input_boolean.blockparty_gui
        - input_boolean.radio2_gui
        - input_boolean.radio3_gui
        - input_boolean.radio4_gui
        - input_boolean.talksport_gui
        - input_boolean.ozradio_gui
        - input_boolean.jazzradio_gui
        - input_boolean.podcasts_gui
- alias: ResetTheMusic
  id: 'ResetTheMusic'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.turnoffthemusic
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: 
        - input_boolean.themusic_gui  
- alias: ResetTheRadio
  id: 'ResetTheRadio'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.turnofftheradio
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: 
        - input_boolean.theradio_gui   
########################################################################
########                   Changing AV source                  #########
######################################################################## 
- alias: Change source based on Input Select
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'AppleTV'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'AppleTV'
- alias: Change source based on Input Select 2
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'PS4'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'PS4'
- alias: Change source based on Input Select 3
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'XB1'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'XB1'
- alias: Change source based on Input Select 4
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'YouView'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'YouView'
- alias: Change source based on Input Select 5
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'Nintendo Switch'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'NINTENDO'
- alias: Change source based on Input Select 6
  trigger:
    - platform: state
      entity_id: input_select.av_source
      to: 'Xbox 360'
  action:
    - service: media_player.select_source
      data:
        entity_id: media_player.pioneer_avr
        source: 'XBOX360'